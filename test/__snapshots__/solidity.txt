#758575DD      // SPDX-License-Identifier: MIT
#4D9375        pragma
#DBD7CACC       
#4D9375        solidity
#DBD7CACC       
#C99076        ^0.8.17
#444444        ;
#CB7676        contract
#5DA994         Array
#DBD7CACC       
#444444        {
#DBD7CACC          
#758575DD      // Several ways to initialize an array
#DBD7CACC          
#5DA994        uint
#444444        []
#DBD7CACC       
#CB7676        public
#DBD7CACC       arr
#444444        ;
#DBD7CACC          
#5DA994        uint
#444444        []
#DBD7CACC       
#CB7676        public
#DBD7CACC       arr2 
#444444        =
#DBD7CACC       
#444444        [
#4C9A91        1
#444444        ,
#DBD7CACC       
#4C9A91        2
#444444        ,
#DBD7CACC       
#4C9A91        3
#444444        ];
#DBD7CACC          
#758575DD      // Fixed sized array, all elements initialize to 0
#DBD7CACC          
#5DA994        uint
#444444        [
#4C9A91        10
#444444        ]
#DBD7CACC       
#CB7676        public
#DBD7CACC       myFixedSizeArr
#444444        ;
#DBD7CACC          
#CB7676        function
#DBD7CACC       
#80A665        get
#444444        (
#5DA994        uint
#DBD7CACC       
#BD976A        i
#444444        )
#DBD7CACC       
#CB7676        public
#DBD7CACC       
#CB7676        view
#DBD7CACC       
#4D9375        returns
#DBD7CACC       
#444444        (
#5DA994        uint
#444444        )
#DBD7CACC       
#444444        {
#DBD7CACC              
#4D9375        return
#DBD7CACC       arr
#444444        [
#DBD7CACC      i
#444444        ];
#DBD7CACC          
#444444        }
#DBD7CACC          
#758575DD      // Solidity can return the entire array.
#DBD7CACC          
#758575DD      // But this function should be avoided for
#DBD7CACC          
#758575DD      // arrays that can grow indefinitely in length.
#DBD7CACC          
#CB7676        function
#DBD7CACC       
#80A665        getArr
#444444        ()
#DBD7CACC       
#CB7676        public
#DBD7CACC       
#CB7676        view
#DBD7CACC       
#4D9375        returns
#DBD7CACC       
#444444        (
#5DA994        uint
#444444        []
#DBD7CACC       
#CB7676        memory
#444444        )
#DBD7CACC       
#444444        {
#DBD7CACC              
#4D9375        return
#DBD7CACC       arr
#444444        ;
#DBD7CACC          
#444444        }
#DBD7CACC          
#CB7676        function
#DBD7CACC       
#80A665        push
#444444        (
#5DA994        uint
#DBD7CACC       
#BD976A        i
#444444        )
#DBD7CACC       
#CB7676        public
#DBD7CACC       
#444444        {
#DBD7CACC              
#758575DD      // Append to array
#DBD7CACC              
#758575DD      // This will increase the array length by 1.
#DBD7CACC              arr
#444444        .
#80A665        push
#444444        (
#DBD7CACC      i
#444444        );
#DBD7CACC          
#444444        }
#DBD7CACC          
#CB7676        function
#DBD7CACC       
#80A665        pop
#444444        ()
#DBD7CACC       
#CB7676        public
#DBD7CACC       
#444444        {
#DBD7CACC              
#758575DD      // Remove last element from array
#DBD7CACC              
#758575DD      // This will decrease the array length by 1
#DBD7CACC              arr
#444444        .
#80A665        pop
#444444        ();
#DBD7CACC          
#444444        }
#DBD7CACC          
#CB7676        function
#DBD7CACC       
#80A665        getLength
#444444        ()
#DBD7CACC       
#CB7676        public
#DBD7CACC       
#CB7676        view
#DBD7CACC       
#4D9375        returns
#DBD7CACC       
#444444        (
#5DA994        uint
#444444        )
#DBD7CACC       
#444444        {
#DBD7CACC              
#4D9375        return
#DBD7CACC       arr
#444444        .
#DBD7CACC      length
#444444        ;
#DBD7CACC          
#444444        }
#DBD7CACC          
#CB7676        function
#DBD7CACC       
#80A665        remove
#444444        (
#5DA994        uint
#DBD7CACC       
#BD976A        index
#444444        )
#DBD7CACC       
#CB7676        public
#DBD7CACC       
#444444        {
#DBD7CACC              
#758575DD      // Delete does not change the array length.
#DBD7CACC              
#758575DD      // It resets the value at index to it's default value,
#DBD7CACC              
#758575DD      // in this case 0
#DBD7CACC              
#4D9375        delete
#DBD7CACC       arr
#444444        [
#DBD7CACC      index
#444444        ];
#DBD7CACC          
#444444        }
#DBD7CACC          
#CB7676        function
#DBD7CACC       
#80A665        examples
#444444        ()
#DBD7CACC       
#CB7676        external
#DBD7CACC       
#444444        {
#DBD7CACC              
#758575DD      // create array in memory, only fixed size can be created
#DBD7CACC              
#5DA994        uint
#444444        []
#DBD7CACC       
#CB7676        memory
#DBD7CACC       a 
#444444        =
#DBD7CACC       
#4D9375        new
#DBD7CACC       
#5DA994        uint
#DBD7CACC      [](
#4C9A91        5
#DBD7CACC      )
#444444        ;
#DBD7CACC          
#444444        }
#444444        }
#758575DD      // From https://solidity-by-example.org/array/