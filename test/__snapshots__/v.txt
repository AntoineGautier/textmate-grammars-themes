#758575DD      // This program displays the fibonacci sequence
#4D9375        import
#DBD7CACC       
#80A665        os
#4D9375        fn
#DBD7CACC       
#80A665        main
#444444        ()
#DBD7CACC       
#444444        {
#DBD7CACC      	
#758575DD      // Check for user input
#DBD7CACC      	
#4D9375        if
#DBD7CACC       os
#444444        .
#DBD7CACC      args
#444444        .
#DBD7CACC      len 
#CB7676        !=
#DBD7CACC       
#4C9A91        2
#DBD7CACC       
#444444        {
#DBD7CACC      		
#80A665        println
#444444        (
#C98A7D        'usage: fibonacci [rank]'
#444444        )
#DBD7CACC      		
#4D9375        return
#DBD7CACC      	
#444444        }
#DBD7CACC      	
#758575DD      // Parse first argument and cast it to int
#DBD7CACC      	
#BD976A        stop
#C99076         
#444444        :=
#C99076         
#DBD7CACC      os
#444444        .
#DBD7CACC      args
#444444        [
#4C9A91        1
#444444        ].
#80A665        int
#444444        ()
#DBD7CACC      	
#758575DD      // Can only calculate correctly until rank 92
#DBD7CACC      	
#4D9375        if
#DBD7CACC       stop 
#CB7676        >
#DBD7CACC       
#4C9A91        92
#DBD7CACC       
#444444        {
#DBD7CACC      		
#80A665        println
#444444        (
#C98A7D        'rank must be 92 or less'
#444444        )
#DBD7CACC      		
#4D9375        return
#DBD7CACC      	
#444444        }
#DBD7CACC      	
#758575DD      // Three consecutive terms of the sequence
#DBD7CACC      	
#CB7676        mut
#DBD7CACC       
#BD976A        a
#C99076         
#444444        :=
#C99076         
#80A665        i64
#444444        (
#4C9A91        0
#444444        )
#DBD7CACC      	
#CB7676        mut
#DBD7CACC       
#BD976A        b
#C99076         
#444444        :=
#C99076         
#80A665        i64
#444444        (
#4C9A91        0
#444444        )
#DBD7CACC      	
#CB7676        mut
#DBD7CACC       
#BD976A        c
#C99076         
#444444        :=
#C99076         
#80A665        i64
#444444        (
#4C9A91        1
#444444        )
#DBD7CACC      	
#80A665        println
#444444        (
#DBD7CACC      a 
#CB7676        +
#DBD7CACC       b 
#CB7676        +
#DBD7CACC       c
#444444        )
#DBD7CACC      	
#4D9375        for
#DBD7CACC       _ 
#4D9375        in
#DBD7CACC       
#4C9A91        0
#DBD7CACC       
#444444        ..
#DBD7CACC       stop 
#444444        {
#DBD7CACC      		
#758575DD      // Set a and b to the next term
#DBD7CACC      		
#BD976A        a
#C99076         
#444444        =
#C99076         
#DBD7CACC      b
#DBD7CACC      		
#BD976A        b
#C99076         
#444444        =
#C99076         
#DBD7CACC      c
#DBD7CACC      		
#758575DD      // Compute the new term
#DBD7CACC      		
#BD976A        c
#C99076         
#444444        =
#C99076         
#DBD7CACC      a 
#CB7676        +
#DBD7CACC       b
#DBD7CACC      		
#758575DD      // Print the new term
#DBD7CACC      		
#80A665        println
#444444        (
#DBD7CACC      c
#444444        )
#DBD7CACC      	
#444444        }
#444444        }
#758575DD      // From https://github.com/vlang/v/blob/master/examples/fibonacci.v